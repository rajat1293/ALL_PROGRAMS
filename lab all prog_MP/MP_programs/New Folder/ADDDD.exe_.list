EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
ADDDD.exe_ -- emu8086 assembler version: 4.02  
 
[ 5/9/2013  --  6:52:36 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .data
[   3]    0000: 65 6E 74 65 72 20 31 73 74 20 6E 75   a db "enter 1st number$"
                6D 62 65 72 24                      
[   4]    0011: 65 6E 74 65 72 20 73 65 63 6F 6E 64   b db "enter second number$"
                20 6E 75 6D 62 65 72 24             
[   5]    0025: 72 65 73 75 6C 74 24                  c db "result$"
[   6]        :                                       .code
[   7]    0030:                                       start:
[   8]    0030: B8 00 00                              mov ax,@data
[   9]    0033: 8E D8                                 mov ds,ax
[  10]    0035: BA 00 00                              mov dx,offset a
[  11]    0038: B4 09                                 mov ah,09h
[  12]    003A: CD 21                                 int 21h
[  13]    003C: B4 01                                 mov ah,01h
[  14]    003E: CD 21                                 int 21h
[  15]    0040: 8A E8                                 mov ch,al
[  16]    0042: B4 01                                 mov ah,01h
[  17]    0044: CD 21                                 int 21h
[  18]    0046: 8A C8                                 mov  cl,al
[  19]    0048: BA 11 00                              mov dx,offset b
[  20]    004B: B4 09                                 mov ah,09h
[  21]    004D: CD 21                                 int 21h
[  22]    004F: B4 01                                 mov ah,01h
[  23]    0051: CD 21                                 int 21h
[  24]    0053: 8A F8                                 mov bh,al
[  25]    0055: B4 01                                 mov ah,01h
[  26]    0057: CD 21                                 int 21h
[  27]    0059: 8A E7                                 mov ah,bh
[  28]    005B: 02 C1                                 add al,cl
[  29]    005D: 37                                    AAA
[  30]    005E: 8A D8                                 mov bl,al
[  31]    0060: 8A C4                                 mov al,ah
[  32]    0062: B4 00                                 mov ah,00h
[  33]    0064: 8A CD                                 mov cl,ch
[  34]    0066: B5 00                                 mov ch,00h
[  35]    0068: 02 C1                                 add al,cl
[  36]    006A: 37                                    aaa
[  37]    006B: 8B C8                                 mov cx,ax
[  38]    006D: BA 25 00                              mov dx,offset c
[  39]    0070: B4 09                                 mov ah,09h
[  40]    0072: CD 21                                 int 21h
[  41]    0074: 81 C1 30 30                           add cx,3030h
[  42]    0078: 8A D5                                 mov dl,ch
[  43]    007A: B4 02                                 mov ah,02h
[  44]    007C: CD 21                                 int 21h
[  45]    007E: 8A D1                                 mov dl,cl
[  46]    0080: B4 02                                 mov ah,02h
[  47]    0082: CD 21                                 int 21h
[  48]    0084: 80 C3 30                              add bl,30h
[  49]    0087: 8A D3                                 mov dl,bl
[  50]    0089: B4 02                                 mov ah,02h
[  51]    008B: CD 21                                 int 21h
[  52]        :                                       end start
[  53]        :                                       
[  54]        :                                       
[  55]        :                                       
[  56]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 8D      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: A2      -   check sum (l.byte)
0013: BE      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 03      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 03      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
