EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
sum2bit_AAA.exe_ -- emu8086 assembler version: 4.02  
 
[ 5/22/2013  --  1:22:07 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .data
[   3]    0000: 65 6E 74 65 72 20 66 69 72 73 74 20   a db "enter first no= $"
                6E 6F 3D 20 24                      
[   4]    0011: 65 6E 74 65 72 20 73 65 63 6F 6E 64   b db "enter second no=$"
                20 6E 6F 3D 24                      
[   5]    0022: 73 75 6D 20 6F 66 20 6E 6F 3D 24      c db "sum of no=$"
[   6]    002D: 00                                    v1 db 00h
[   7]    002E:                                       start:
[   8]    002E: B8 00 00                              mov ax,@data
[   9]    0031: 8E D8                                 mov ds,ax
[  10]    0033: BA 00 00                              mov dx,offset a
[  11]    0036: B4 09                                 mov ah,09h
[  12]    0038: CD 21                                 int 21h
[  13]    003A: B4 01                                 mov ah,01h
[  14]    003C: CD 21                                 int 21h
[  15]    003E: 8A F8                                 mov bh,al
[  16]    0040: B4 01                                 mov ah,01h
[  17]    0042: CD 21                                 int 21h
[  18]    0044: 8A D8                                 mov bl,al
[  19]    0046: BA 11 00                              mov dx,offset b
[  20]    0049: B4 09                                 mov ah,09h
[  21]    004B: CD 21                                 int 21h
[  22]    004D: B4 01                                 mov ah,01h
[  23]    004F: CD 21                                 int 21h
[  24]    0051: 8A E8                                 mov ch,al
[  25]    0053: B4 01                                 mov ah,01h
[  26]    0055: CD 21                                 int 21h
[  27]    0057: 02 C3                                 add al,bl
[  28]    0059: B4 00                                 mov ah,00h
[  29]    005B: 37                                    AAA
[  30]    005C: 02 FC                                 add bh,ah
[  31]    005E: 02 FD                                 add bh,ch
[  32]    0060: A2 2D 00                              mov v1,al
[  33]    0063: 8A C7                                 mov al,bh
[  34]    0065: B4 00                                 mov ah,00h
[  35]    0067: 37                                    AAA
[  36]    0068: 8B D8                                 mov bx,ax
[  37]    006A: 81 C3 30 30                           add bx,3030h
[  38]    006E: 8A D7                                 mov dl,bh
[  39]    0070: B4 02                                 mov ah,02h
[  40]    0072: CD 21                                 int 21h
[  41]    0074: 8A D3                                 mov dl,bl
[  42]    0076: B4 02                                 mov ah,02h
[  43]    0078: CD 21                                 int 21h
[  44]    007A: 8A 16 2D 00                           mov dl,v1
[  45]    007E: 80 C2 30                              add dl,30h
[  46]    0081: B4 02                                 mov ah,02h
[  47]    0083: CD 21                                 int 21h
[  48]        :                                       end start
[  49]        :                                       
[  50]        :                                       
[  51]        :                                       
[  52]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 85      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 0E      -   check sum (l.byte)
0013: E4      -   check sum (h.byte)
0014: 2E      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 00      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 2F      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 00      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
