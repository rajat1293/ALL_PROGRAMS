EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
posi.exe_ -- emu8086 assembler version: 4.02  
 
[ 5/9/2013  --  4:52:58 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .data
[   3]    0000: 65 6E 74 65 72 20 6E 75 6D 62 65 72   a db "enter number$"
                24                                  
[   4]    000D: 70 6F 73 69 74 69 76 65 24            b db "positive$"
[   5]    0016: 6E 65 67 61 74 69 76 65 24            c db "negative$"
[   6]        :                                       .code
[   7]    0020:                                       start:
[   8]    0020: B8 00 00                              mov ax,@data
[   9]    0023: 8E D8                                 mov ds,ax
[  10]    0025: BA 00 00                              mov dx,offset a
[  11]    0028: B4 09                                 mov ah,09h
[  12]    002A: CD 21                                 int 21h
[  13]    002C: B4 01                                 mov ah,01h
[  14]    002E: CD 21                                 int 21h
[  15]    0030: B3 2D                                 mov bl,'-'
[  16]    0032: 3A C3                                 cmp al,bl
[  17]    0034: 74 09                                 jz k
[  18]    0036: BA 0D 00                              mov dx,offset b
[  19]    0039: B4 09                                 mov ah,09h
[  20]    003B: CD 21                                 int 21h
[  21]    003D: EB 0B                                 jmp s:
[  22]    003F:                                       k:
[  23]    003F: B4 01                                 mov ah,01h
[  24]    0041: CD 21                                 int 21h
[  25]    0043: BA 16 00                              mov dx,offset c
[  26]    0046: B4 09                                 mov ah,09h
[  27]    0048: CD 21                                 int 21h
[  28]    004A:                                       s:
[  29]        :                                       end start
[  30]        :                                       
[  31]        :                                       
[  32]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 4A      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 4F      -   check sum (l.byte)
0013: 6A      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 02      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 02      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
