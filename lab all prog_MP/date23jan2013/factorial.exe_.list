EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
factorial.exe_ -- emu8086 assembler version: 4.02  
 
[ 5/22/2013  --  1:36:17 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL SMALL
[   2]        :                                       .data
[   3]    0000: 45 4E 54 45 52 20 54 48 45 20 4E 55   a db  "ENTER THE NUMBER:$"
                4D 42 45 52 3A 24                   
[   4]    0012: 46 41 43 54 4F 52 49 41 4C 20 4F 46   b db  "FACTORIAL OF NUMBER IS: $"
                20 4E 55 4D 42 45 52 20 49 53 3A 20 
                24                                  
[   5]    002B: 00                                    v1 db 00h
[   6]    002C: 00                                    v2 db 00h
[   7]    002D: 00                                    v3 db 00h
[   8]    002E: 00                                    v4 db 00h
[   9]        :                                       .code
[  10]    0030:                                       START:
[  11]    0030: B8 00 00                              mov ax,@data
[  12]    0033: 8E D8                                 mov ds,ax
[  13]    0035: BA 00 00                              mov dx,offset a
[  14]    0038: B4 09                                 mov ah,09h
[  15]    003A: CD 21                                 int 21h
[  16]    003C: B4 01                                 mov ah,01h
[  17]    003E: CD 21                                 int 21h
[  18]    0040: 2C 30                                 sub al,30h
[  19]    0042: 8A D8                                 mov bl,al
[  20]    0044: 8A C8                                 mov cl,al
[  21]        :                                       
[  22]    0046: 80 E9 02                              sub cl,02
[  23]    0049: B4 00                                 mov ah,00h
[  24]    004B: 37                                    aaa
[  25]    004C:                                       c:
[  26]        :                                       
[  27]    004C: FE CB                                 dec bl
[  28]    004E: F6 E3                                 mul bl
[  29]    0050: 88 26 2C 00                           mov v2,ah
[  30]    0054: B4 00                                 mov ah,00h
[  31]    0056: 37                                    aaa
[  32]    0057: A2 2D 00                              mov v3,al
[  33]    005A: A0 2C 00                              mov al,v2
[  34]    005D: F6 E3                                 mul bl
[  35]    005F: 02 C4                                 add al,ah
[  36]    0061: 37                                    aaa
[  37]    0062: 8A 1E 2B 00                           mov bl,v1
[  38]    0066: 88 1E 2E 00                           mov v4,bl
[  39]    006A: 88 26 2B 00                           mov v1,ah
[  40]    006E: 8A E0                                 mov ah,al
[  41]    0070: A0 2E 00                              mov al,v4
[  42]    0073: F6 E3                                 mul bl
[  43]    0075: 00 06 2B 00                           add v1,al
[  44]    0079: A0 2D 00                              mov al,v3
[  45]        :                                       
[  46]    007C: E2 CE                                 loop c
[  47]        :                                       
[  48]    007E: 88 26 2C 00                           mov v2,ah
[  49]    0082: A2 2D 00                              mov v3, al
[  50]    0085: BA 12 00                              MOV DX,offset b
[  51]    0088: B4 09                                 MOV AH,09h
[  52]    008A: CD 21                                 INT 21H
[  53]        :                                       
[  54]        :                                       
[  55]    008C: 8A 16 2B 00                           mov dl,v1
[  56]    0090: 80 C2 30                              add dl,48
[  57]    0093: B4 02                                 mov ah,02h
[  58]    0095: CD 21                                 int 21h
[  59]    0097: 8A 16 2C 00                           mov dl,v2
[  60]    009B: 80 C2 30                              add dl,48
[  61]    009E: B4 02                                 mov ah,02h
[  62]    00A0: CD 21                                 int 21h
[  63]    00A2: 8A 16 2D 00                           mov dl,v3
[  64]    00A6: 80 C2 30                              add dl,48
[  65]    00A9: B4 02                                 mov ah,02h
[  66]    00AB: CD 21                                 int 21h
[  67]        :                                       
[  68]        :                                       end start
[  69]        :                                       
[  70]        :                                       
[  71]        :                                       
[  72]        :                                       
[  73]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: AD      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: C4      -   check sum (l.byte)
0013: E1      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 03      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 03      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
